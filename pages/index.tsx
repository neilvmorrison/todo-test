import type { NextPage } from "next";
import Head from "next/head";
import React, { useEffect, useState } from "react";

import styles from "../styles/Home.module.css";
import Input from "../components/Input";
import { Todo } from "../types/Todo";
import TodoTile from "../components/Todo";

const Home: NextPage = () => {
  const [inputValue, setInputValue] = useState("");
  const [todos, setTodos] = useState<Todo[]>([]);

  useEffect(() => {
    async function fetchTodos() {
      const res = await fetch("/api/todo");
      const todos = await res.json();
      setTodos(todos);
    }
    fetchTodos();
  }, []);

  function clearForm() {
    setInputValue("");
  }

  async function createTodo() {
    const payload = {
      title: inputValue,
    };
    const res = await fetch("/api/todo", {
      method: "POST",
      body: JSON.stringify(payload),
    });
    const todos = await res.json();
    setTodos(todos);
  }

  async function updateTodo(
    id: string,
    attributes: Partial<Todo>
  ): Promise<void> {
    const payload = {
      id,
      ...attributes,
    };
    const res = await fetch("/api/todo", {
      method: "PATCH",
      body: JSON.stringify(payload),
    });
    const todos = await res.json();
    setTodos(todos);
  }

  async function deleteTodo(id: string): Promise<void> {
    const res = await fetch("/api/todo", {
      method: "DELETE",
      body: JSON.stringify({ id }),
    });
    const todos = await res.json();
    setTodos(todos);
  }

  async function handleSubmit(event: any) {
    event.preventDefault();
    try {
      await createTodo();
      clearForm();
    } catch (err) {
      alert(err);
    }
  }

  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {
    setInputValue(event.target.value);
  }

  return (
    <>
      <Head>
        <title>Purple Cow ToDo List</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={styles.topBar}>
        <h1 className={styles.headerText}>Purple Cow To-do List</h1>
        <a
          className={styles.link}
          href="https://github.com/neilvmorrison/todo-test"
          target="_blank"
          rel="noreferrer noopener"
        >
          View Code
        </a>
      </header>
      <div className={styles.container}>
        {!todos?.length ? (
          <div className={styles.emptyText}>You have no todos yet</div>
        ) : (
          <ul className={styles.list}>
            {todos?.map((todo: Todo) => (
              <TodoTile
                todo={todo}
                key={todo.id}
                updateTodo={updateTodo}
                deleteTodo={deleteTodo}
              />
            ))}
          </ul>
        )}
        <form onSubmit={handleSubmit}>
          <Input
            placeholder="Add item"
            onChange={handleChange}
            value={inputValue}
          />
        </form>
      </div>
    </>
  );
};

export default Home;
